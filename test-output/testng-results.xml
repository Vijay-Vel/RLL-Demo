<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-09T20:09:27 IST" name="Default suite" finished-at="2023-12-09T20:09:43 IST" duration-ms="16707">
    <groups>
    </groups>
    <test started-at="2023-12-09T20:09:27 IST" name="Default test" finished-at="2023-12-09T20:09:43 IST" duration-ms="16707">
      <class name="tests.LoginPageTest">
        <test-method is-config="true" signature="InitalizeExtentReport()[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:26 IST" name="InitalizeExtentReport" finished-at="2023-12-09T20:09:27 IST" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitalizeExtentReport -->
        <test-method is-config="true" signature="getnameMethod(org.testng.ITestContext)[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:27 IST" name="getnameMethod" finished-at="2023-12-09T20:09:27 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3f0ce0d1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getnameMethod -->
        <test-method is-config="true" signature="start_browser()[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:27 IST" name="start_browser" finished-at="2023-12-09T20:09:31 IST" depends-on-methods="pages.TestBase.getnameMethod" duration-ms="4230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start_browser -->
        <test-method signature="test_login(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:31 IST" name="test_login" data-provider="LoginDetails" finished-at="2023-12-09T20:09:35 IST" duration-ms="3316" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [My Account] but found [My Account]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [My Account] but found [My Account]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failEquals(Assert.java:1581)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:156)
at org.testng.Assert.assertNotEquals(Assert.java:2197)
at org.testng.Assert.assertNotEquals(Assert.java:2219)
at tests.LoginPageTest.test_login(LoginPageTest.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_login -->
        <test-method is-config="true" signature="generateTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:35 IST" name="generateTestStatus" finished-at="2023-12-09T20:09:35 IST" duration-ms="360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginPageTest.test_login(java.lang.String,java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test_login status=FAILURE method=LoginPageTest.test_login(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginPageTest@19932c16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateTestStatus -->
        <test-method signature="test_login(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:35 IST" name="test_login" data-provider="LoginDetails" finished-at="2023-12-09T20:09:40 IST" duration-ms="4594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vijayvel10301@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[group@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_login -->
        <test-method is-config="true" signature="generateTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:40 IST" name="generateTestStatus" finished-at="2023-12-09T20:09:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginPageTest.test_login(java.lang.String,java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test_login status=SUCCESS method=LoginPageTest.test_login(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginPageTest@19932c16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateTestStatus -->
        <test-method signature="test_login(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:40 IST" name="test_login" data-provider="LoginDetails" finished-at="2023-12-09T20:09:43 IST" duration-ms="3327" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[group5@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[grp5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [My Account] but found [My Account]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [My Account] but found [My Account]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failEquals(Assert.java:1581)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:156)
at org.testng.Assert.assertNotEquals(Assert.java:2197)
at org.testng.Assert.assertNotEquals(Assert.java:2219)
at tests.LoginPageTest.test_login(LoginPageTest.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_login -->
        <test-method is-config="true" signature="generateTestStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:43 IST" name="generateTestStatus" finished-at="2023-12-09T20:09:43 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginPageTest.test_login(java.lang.String,java.lang.String) throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test_login status=FAILURE method=LoginPageTest.test_login(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginPageTest@19932c16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateTestStatus -->
        <test-method is-config="true" signature="close_browser()[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:43 IST" name="close_browser" finished-at="2023-12-09T20:09:43 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close_browser -->
        <test-method is-config="true" signature="generateReports()[pri:0, instance:tests.LoginPageTest@19932c16]" started-at="2023-12-09T20:09:43 IST" name="generateReports" finished-at="2023-12-09T20:09:44 IST" duration-ms="627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReports -->
      </class> <!-- tests.LoginPageTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
